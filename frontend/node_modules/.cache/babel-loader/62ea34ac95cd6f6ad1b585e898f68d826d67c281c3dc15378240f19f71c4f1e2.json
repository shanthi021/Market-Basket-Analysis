{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Market Basket\\\\frontend\\\\src\\\\components\\\\KMeansVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport styled from \"styled-components\";\nimport { Users, Target } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n/* ------------------- ðŸŽ¨ Styled Components ------------------- */\nconst VisualizationContainer = styled(motion.div)`\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  margin-bottom: 24px;\n`;\n_c = VisualizationContainer;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 24px;\n\n  h2 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #374151;\n    margin: 0;\n  }\n`;\n_c2 = Header;\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 24px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c3 = Content;\nconst ChartContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  height: 450px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n`;\n_c4 = ChartContainer;\nconst ClusterStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c5 = ClusterStats;\nconst ClusterCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  border-left: 4px solid ${props => props.color};\n`;\n_c6 = ClusterCard;\nconst ClusterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n\n  h3 {\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #374151;\n    margin: 0;\n  }\n`;\n_c7 = ClusterHeader;\nconst ClusterMetric = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n\n  span {\n    font-size: 0.875rem;\n    color: #6b7280;\n  }\n\n  strong {\n    color: #374151;\n    font-weight: 600;\n  }\n`;\n_c8 = ClusterMetric;\nconst CategorySelect = styled.select`\n  margin-top: 8px;\n  padding: 6px 8px;\n  border-radius: 6px;\n  border: 1px solid #d1d5db;\n  font-size: 0.9rem;\n  width: 100%;\n  background: #f9fafb;\n`;\n\n/* ------------------- ðŸ§  Component ------------------- */\n_c9 = CategorySelect;\nconst KMeansVisualization = ({\n  data\n}) => {\n  _s();\n  if (!data) return null;\n  const clusterColors = [\"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#8b5cf6\", \"#06b6d4\", \"#84cc16\", \"#f97316\"];\n  const [clusters, setClusters] = useState(data.clusters || []);\n  const categoryOptions = [\"High Value\", \"Budget Shoppers\", \"Occasional Buyers\", \"Frequent Buyers\", \"Young Adults\", \"Seniors\", \"Families\", \"Others\"];\n\n  // âœ… Group points by cluster\n  const groupedPoints = (data.visualization_data || []).reduce((acc, point) => {\n    if (!acc[point.cluster]) acc[point.cluster] = [];\n    acc[point.cluster].push({\n      x: point.x,\n      y: point.y,\n      customer_name: point.customer_name,\n      age: point.age\n    });\n    return acc;\n  }, {});\n\n  // âœ… One dataset per cluster\n  const chartData = {\n    datasets: [...Object.keys(groupedPoints).map(clusterId => {\n      var _clusters$clusterNum;\n      const clusterNum = parseInt(clusterId, 10);\n      return {\n        label: ((_clusters$clusterNum = clusters[clusterNum]) === null || _clusters$clusterNum === void 0 ? void 0 : _clusters$clusterNum.category) || `Cluster ${clusterNum}`,\n        data: groupedPoints[clusterNum],\n        backgroundColor: clusterColors[clusterNum % clusterColors.length],\n        borderColor: clusterColors[clusterNum % clusterColors.length],\n        pointRadius: 5,\n        pointHoverRadius: 7\n      };\n    }), {\n      label: \"Centroids\",\n      data: clusters.map(c => {\n        var _c$centroid, _c$centroid2;\n        return {\n          x: ((_c$centroid = c.centroid) === null || _c$centroid === void 0 ? void 0 : _c$centroid[0]) || 0,\n          y: ((_c$centroid2 = c.centroid) === null || _c$centroid2 === void 0 ? void 0 : _c$centroid2[1]) || 0\n        };\n      }),\n      backgroundColor: \"#111827\",\n      pointStyle: \"star\",\n      pointRadius: 10,\n      pointHoverRadius: 12\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Customer Segmentation - K-Means Clustering\",\n        font: {\n          size: 16,\n          weight: \"bold\"\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const point = context.raw;\n            if (point.customer_name) {\n              return `${point.customer_name} (Age: ${point.age || \"N/A\"})`;\n            }\n            return \"Centroid\";\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Principal Component 1\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Principal Component 2\"\n        }\n      }\n    }\n  };\n\n  // âœ… Handle category change\n  const handleCategoryChange = async (clusterId, newCategory) => {\n    const updatedClusters = clusters.map(c => c.cluster_id === clusterId ? {\n      ...c,\n      category: newCategory\n    } : c);\n    setClusters(updatedClusters);\n    const labelsPayload = {};\n    updatedClusters.forEach(c => {\n      labelsPayload[c.cluster_id] = c.category;\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      await fetch(\"http://127.0.0.1:5000/api/set-cluster-labels\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token ? `Bearer ${token}` : \"\"\n        },\n        body: JSON.stringify({\n          labels: labelsPayload\n        })\n      });\n    } catch (err) {\n      console.error(\"Error saving cluster labels:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VisualizationContainer, {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 0.6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Target, {\n        size: 24,\n        color: \"#667eea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"K-Means Customer Segmentation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(ChartContainer, {\n        children: /*#__PURE__*/_jsxDEV(Scatter, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClusterStats, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: \"16px\",\n            color: \"#374151\"\n          },\n          children: \"Cluster Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), clusters.map((cluster, index) => {\n          var _cluster$most_purchas;\n          return /*#__PURE__*/_jsxDEV(ClusterCard, {\n            color: clusterColors[index % clusterColors.length],\n            children: [/*#__PURE__*/_jsxDEV(ClusterHeader, {\n              children: [/*#__PURE__*/_jsxDEV(Users, {\n                size: 16,\n                color: clusterColors[index % clusterColors.length]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Cluster \", cluster.cluster_id, \" \\u2013\", \" \", cluster.category || \"Uncategorized\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Customers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cluster.total_customers || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Avg Items/User:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cluster.avg_purchase_frequency ? cluster.avg_purchase_frequency.toFixed(2) : \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Avg Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cluster.avg_age ? cluster.avg_age.toFixed(1) : \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Top Products:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: ((_cluster$most_purchas = cluster.most_purchased_products) === null || _cluster$most_purchas === void 0 ? void 0 : _cluster$most_purchas.join(\", \")) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CategorySelect, {\n              value: cluster.category || \"\",\n              onChange: e => handleCategoryChange(cluster.cluster_id, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), categoryOptions.map((opt, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: opt,\n                children: opt\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(KMeansVisualization, \"iZ+SgU+Sf/SQE2Zlse+509encJs=\");\n_c0 = KMeansVisualization;\nexport default KMeansVisualization;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"VisualizationContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"ChartContainer\");\n$RefreshReg$(_c5, \"ClusterStats\");\n$RefreshReg$(_c6, \"ClusterCard\");\n$RefreshReg$(_c7, \"ClusterHeader\");\n$RefreshReg$(_c8, \"ClusterMetric\");\n$RefreshReg$(_c9, \"CategorySelect\");\n$RefreshReg$(_c0, \"KMeansVisualization\");","map":{"version":3,"names":["React","useState","motion","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","styled","Users","Target","jsxDEV","_jsxDEV","register","VisualizationContainer","div","_c","Header","_c2","Content","_c3","ChartContainer","_c4","ClusterStats","_c5","ClusterCard","props","color","_c6","ClusterHeader","_c7","ClusterMetric","_c8","CategorySelect","select","_c9","KMeansVisualization","data","_s","clusterColors","clusters","setClusters","categoryOptions","groupedPoints","visualization_data","reduce","acc","point","cluster","push","x","y","customer_name","age","chartData","datasets","Object","keys","map","clusterId","_clusters$clusterNum","clusterNum","parseInt","label","category","backgroundColor","length","borderColor","pointRadius","pointHoverRadius","c","_c$centroid","_c$centroid2","centroid","pointStyle","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","font","size","weight","tooltip","callbacks","context","raw","scales","handleCategoryChange","newCategory","updatedClusters","cluster_id","labelsPayload","forEach","token","localStorage","getItem","fetch","method","headers","Authorization","body","JSON","stringify","labels","err","console","error","initial","opacity","animate","transition","duration","children","fileName","_jsxFileName","lineNumber","columnNumber","options","style","marginBottom","index","_cluster$most_purchas","total_customers","avg_purchase_frequency","toFixed","avg_age","most_purchased_products","join","value","onChange","e","target","opt","i","_c0","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Market Basket/frontend/src/components/KMeansVisualization.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Scatter } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport styled from \"styled-components\";\r\nimport { Users, Target } from \"lucide-react\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n/* ------------------- ðŸŽ¨ Styled Components ------------------- */\r\nconst VisualizationContainer = styled(motion.div)`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(20px);\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  margin-bottom: 24px;\r\n\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    color: #374151;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 24px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst ChartContainer = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  height: 450px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst ClusterStats = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nconst ClusterCard = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 16px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n  border-left: 4px solid ${(props) => props.color};\r\n`;\r\n\r\nconst ClusterHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 8px;\r\n\r\n  h3 {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    color: #374151;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst ClusterMetric = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 4px;\r\n\r\n  span {\r\n    font-size: 0.875rem;\r\n    color: #6b7280;\r\n  }\r\n\r\n  strong {\r\n    color: #374151;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst CategorySelect = styled.select`\r\n  margin-top: 8px;\r\n  padding: 6px 8px;\r\n  border-radius: 6px;\r\n  border: 1px solid #d1d5db;\r\n  font-size: 0.9rem;\r\n  width: 100%;\r\n  background: #f9fafb;\r\n`;\r\n\r\n/* ------------------- ðŸ§  Component ------------------- */\r\nconst KMeansVisualization = ({ data }) => {\r\n  if (!data) return null;\r\n\r\n  const clusterColors = [\r\n    \"#3b82f6\",\r\n    \"#10b981\",\r\n    \"#f59e0b\",\r\n    \"#ef4444\",\r\n    \"#8b5cf6\",\r\n    \"#06b6d4\",\r\n    \"#84cc16\",\r\n    \"#f97316\",\r\n  ];\r\n\r\n  const [clusters, setClusters] = useState(data.clusters || []);\r\n\r\n  const categoryOptions = [\r\n    \"High Value\",\r\n    \"Budget Shoppers\",\r\n    \"Occasional Buyers\",\r\n    \"Frequent Buyers\",\r\n    \"Young Adults\",\r\n    \"Seniors\",\r\n    \"Families\",\r\n    \"Others\",\r\n  ];\r\n\r\n  // âœ… Group points by cluster\r\n  const groupedPoints = (data.visualization_data || []).reduce((acc, point) => {\r\n    if (!acc[point.cluster]) acc[point.cluster] = [];\r\n    acc[point.cluster].push({\r\n      x: point.x,\r\n      y: point.y,\r\n      customer_name: point.customer_name,\r\n      age: point.age,\r\n    });\r\n    return acc;\r\n  }, {});\r\n\r\n  // âœ… One dataset per cluster\r\n  const chartData = {\r\n    datasets: [\r\n      ...Object.keys(groupedPoints).map((clusterId) => {\r\n        const clusterNum = parseInt(clusterId, 10);\r\n        return {\r\n          label: clusters[clusterNum]?.category || `Cluster ${clusterNum}`,\r\n          data: groupedPoints[clusterNum],\r\n          backgroundColor: clusterColors[clusterNum % clusterColors.length],\r\n          borderColor: clusterColors[clusterNum % clusterColors.length],\r\n          pointRadius: 5,\r\n          pointHoverRadius: 7,\r\n        };\r\n      }),\r\n      {\r\n        label: \"Centroids\",\r\n        data: clusters.map((c) => ({\r\n          x: c.centroid?.[0] || 0,\r\n          y: c.centroid?.[1] || 0,\r\n        })),\r\n        backgroundColor: \"#111827\",\r\n        pointStyle: \"star\",\r\n        pointRadius: 10,\r\n        pointHoverRadius: 12,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { position: \"top\" },\r\n      title: {\r\n        display: true,\r\n        text: \"Customer Segmentation - K-Means Clustering\",\r\n        font: { size: 16, weight: \"bold\" },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            const point = context.raw;\r\n            if (point.customer_name) {\r\n              return `${point.customer_name} (Age: ${point.age || \"N/A\"})`;\r\n            }\r\n            return \"Centroid\";\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: { title: { display: true, text: \"Principal Component 1\" } },\r\n      y: { title: { display: true, text: \"Principal Component 2\" } },\r\n    },\r\n  };\r\n\r\n  // âœ… Handle category change\r\n  const handleCategoryChange = async (clusterId, newCategory) => {\r\n    const updatedClusters = clusters.map((c) =>\r\n      c.cluster_id === clusterId ? { ...c, category: newCategory } : c\r\n    );\r\n    setClusters(updatedClusters);\r\n\r\n    const labelsPayload = {};\r\n    updatedClusters.forEach((c) => {\r\n      labelsPayload[c.cluster_id] = c.category;\r\n    });\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await fetch(\"http://127.0.0.1:5000/api/set-cluster-labels\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token ? `Bearer ${token}` : \"\",\r\n        },\r\n        body: JSON.stringify({ labels: labelsPayload }),\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error saving cluster labels:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VisualizationContainer\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n    >\r\n      <Header>\r\n        <Target size={24} color=\"#667eea\" />\r\n        <h2>K-Means Customer Segmentation</h2>\r\n      </Header>\r\n\r\n      <Content>\r\n        {/* Chart */}\r\n        <ChartContainer>\r\n          <Scatter data={chartData} options={chartOptions} />\r\n        </ChartContainer>\r\n\r\n        {/* Cluster Stats */}\r\n        <ClusterStats>\r\n          <h3 style={{ marginBottom: \"16px\", color: \"#374151\" }}>\r\n            Cluster Statistics\r\n          </h3>\r\n          {clusters.map((cluster, index) => (\r\n            <ClusterCard\r\n              key={index}\r\n              color={clusterColors[index % clusterColors.length]}\r\n            >\r\n              <ClusterHeader>\r\n                <Users\r\n                  size={16}\r\n                  color={clusterColors[index % clusterColors.length]}\r\n                />\r\n                <h3>\r\n                  Cluster {cluster.cluster_id} â€“{\" \"}\r\n                  {cluster.category || \"Uncategorized\"}\r\n                </h3>\r\n              </ClusterHeader>\r\n\r\n              <ClusterMetric>\r\n                <span>Customers:</span>\r\n                <strong>{cluster.total_customers || 0}</strong>\r\n              </ClusterMetric>\r\n              <ClusterMetric>\r\n                <span>Avg Items/User:</span>\r\n                <strong>\r\n                  {cluster.avg_purchase_frequency\r\n                    ? cluster.avg_purchase_frequency.toFixed(2)\r\n                    : \"0.00\"}\r\n                </strong>\r\n              </ClusterMetric>\r\n              <ClusterMetric>\r\n                <span>Avg Age:</span>\r\n                <strong>\r\n                  {cluster.avg_age ? cluster.avg_age.toFixed(1) : \"N/A\"}\r\n                </strong>\r\n              </ClusterMetric>\r\n              <ClusterMetric>\r\n                <span>Top Products:</span>\r\n                <strong>\r\n                  {cluster.most_purchased_products?.join(\", \") || \"N/A\"}\r\n                </strong>\r\n              </ClusterMetric>\r\n\r\n              {/* Dropdown to change category */}\r\n              <CategorySelect\r\n                value={cluster.category || \"\"}\r\n                onChange={(e) =>\r\n                  handleCategoryChange(cluster.cluster_id, e.target.value)\r\n                }\r\n              >\r\n                <option value=\"\">Select Category</option>\r\n                {categoryOptions.map((opt, i) => (\r\n                  <option key={i} value={opt}>\r\n                    {opt}\r\n                  </option>\r\n                ))}\r\n              </CategorySelect>\r\n            </ClusterCard>\r\n          ))}\r\n        </ClusterStats>\r\n      </Content>\r\n    </VisualizationContainer>\r\n  );\r\n};\r\n\r\nexport default KMeansVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}