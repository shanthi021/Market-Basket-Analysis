{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Market Basket\\\\frontend\\\\src\\\\components\\\\KMeansVisualization.js\",\n  _s = $RefreshSig$();\n// src/components/KMeansVisualization.js\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport styled from \"styled-components\";\nimport { Users, Target, Download } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n/* ------------------- ðŸŽ¨ Styled Components ------------------- */\nconst VisualizationContainer = styled(motion.div)`\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  margin-bottom: 24px;\n`;\n_c = VisualizationContainer;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 24px;\n\n  h2 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #374151;\n    margin: 0;\n  }\n`;\n_c2 = Header;\nconst DownloadButton = styled.button`\n  margin-left: auto;\n  background: #4f46e5;\n  color: white;\n  border: none;\n  padding: 8px 14px;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  cursor: pointer;\n  transition: 0.2s;\n\n  &:hover {\n    background: #4338ca;\n  }\n`;\n_c3 = DownloadButton;\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 24px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c4 = Content;\nconst ChartContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  height: 450px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n`;\n_c5 = ChartContainer;\nconst ClusterStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c6 = ClusterStats;\nconst ClusterCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  border-left: 4px solid ${props => props.color};\n`;\n_c7 = ClusterCard;\nconst ClusterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n\n  h3 {\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #374151;\n    margin: 0;\n  }\n`;\n_c8 = ClusterHeader;\nconst ClusterMetric = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n\n  span {\n    font-size: 0.875rem;\n    color: #6b7280;\n  }\n\n  strong {\n    color: #374151;\n    font-weight: 600;\n  }\n`;\n_c9 = ClusterMetric;\nconst CategorySelect = styled.select`\n  margin-top: 8px;\n  padding: 6px 8px;\n  border-radius: 6px;\n  border: 1px solid #d1d5db;\n  font-size: 0.9rem;\n  width: 100%;\n  background: #f9fafb;\n`;\n\n/* ------------------- ðŸ§  Component ------------------- */\n_c0 = CategorySelect;\nconst KMeansVisualization = ({\n  data\n}) => {\n  _s();\n  const [clusters, setClusters] = useState((data === null || data === void 0 ? void 0 : data.clusters) || []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No clustering data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 21\n  }, this);\n  const clusterColors = [\"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#8b5cf6\", \"#06b6d4\", \"#84cc16\", \"#f97316\"];\n  const categoryOptions = [\"High Value\", \"Budget Shoppers\", \"Occasional Buyers\", \"Frequent Buyers\", \"Young Adults\", \"Seniors\", \"Families\", \"Others\"];\n\n  // ðŸ”‘ Adjust positions based on category selection\n  const getAdjustedPosition = (point, category) => {\n    switch (category) {\n      case \"High Value\":\n        return {\n          ...point,\n          x: point.x + 2,\n          y: point.y + 2\n        };\n      case \"Budget Shoppers\":\n        return {\n          ...point,\n          x: point.x - 2,\n          y: point.y\n        };\n      case \"Occasional Buyers\":\n        return {\n          ...point,\n          x: point.x,\n          y: point.y - 2\n        };\n      case \"Frequent Buyers\":\n        return {\n          ...point,\n          x: point.x,\n          y: point.y + 2\n        };\n      case \"Young Adults\":\n        return {\n          ...point,\n          x: point.x + 3,\n          y: point.y - 1\n        };\n      case \"Seniors\":\n        return {\n          ...point,\n          x: point.x - 3,\n          y: point.y + 1\n        };\n      case \"Families\":\n        return {\n          ...point,\n          x: point.x + 1,\n          y: point.y - 3\n        };\n      default:\n        return point;\n    }\n  };\n\n  // âœ… Group points by cluster with adjusted positions\n  const groupedPoints = (data.visualization_data || []).reduce((acc, point) => {\n    var _clusters$find;\n    if (!acc[point.cluster]) acc[point.cluster] = [];\n    const clusterCategory = ((_clusters$find = clusters.find(c => c.cluster_id === point.cluster)) === null || _clusters$find === void 0 ? void 0 : _clusters$find.category) || \"\";\n    acc[point.cluster].push(getAdjustedPosition(point, clusterCategory));\n    return acc;\n  }, {});\n\n  // âœ… Chart datasets\n  const chartData = {\n    datasets: [...Object.keys(groupedPoints).map(clusterId => {\n      var _clusters$clusterNum;\n      const clusterNum = parseInt(clusterId, 10);\n      return {\n        label: ((_clusters$clusterNum = clusters[clusterNum]) === null || _clusters$clusterNum === void 0 ? void 0 : _clusters$clusterNum.category) || `Cluster ${clusterNum}`,\n        data: groupedPoints[clusterNum],\n        backgroundColor: clusterColors[clusterNum % clusterColors.length],\n        borderColor: clusterColors[clusterNum % clusterColors.length],\n        pointRadius: 5,\n        pointHoverRadius: 7\n      };\n    }), {\n      label: \"Centroids\",\n      data: clusters.map(c => {\n        var _c$centroid, _c$centroid2;\n        return {\n          x: ((_c$centroid = c.centroid) === null || _c$centroid === void 0 ? void 0 : _c$centroid[0]) || 0,\n          y: ((_c$centroid2 = c.centroid) === null || _c$centroid2 === void 0 ? void 0 : _c$centroid2[1]) || 0\n        };\n      }),\n      backgroundColor: \"#111827\",\n      pointStyle: \"star\",\n      pointRadius: 10,\n      pointHoverRadius: 12\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Customer Segmentation - K-Means Clustering\",\n        font: {\n          size: 16,\n          weight: \"bold\"\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const point = context.raw;\n            if (point.customer_name) {\n              return `${point.customer_name} (Age: ${point.age || \"N/A\"})`;\n            }\n            return \"Centroid\";\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Principal Component 1\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Principal Component 2\"\n        }\n      }\n    }\n  };\n\n  // âœ… Safe number formatter\n  const formatNumber = (value, decimals = 2) => typeof value === \"number\" && !isNaN(value) ? value.toFixed(decimals) : \"N/A\";\n\n  // âœ… Handle category change\n  const handleCategoryChange = async (clusterId, newCategory) => {\n    const updatedClusters = clusters.map(c => c.cluster_id === clusterId ? {\n      ...c,\n      category: newCategory\n    } : c);\n    setClusters(updatedClusters);\n    const labelsPayload = {};\n    updatedClusters.forEach(c => {\n      labelsPayload[c.cluster_id] = c.category;\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      await fetch(\"http://127.0.0.1:5000/api/set-cluster-labels\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token ? `Bearer ${token}` : \"\"\n        },\n        body: JSON.stringify({\n          labels: labelsPayload\n        })\n      });\n    } catch (err) {\n      console.error(\"Error saving cluster labels:\", err);\n    }\n  };\n\n  // âœ… Download as CSV\n  const handleDownload = () => {\n    const csvHeader = [\"Cluster ID\", \"Category\", \"Total Customers\", \"Avg Purchase Frequency\", \"Avg Age\", \"Top Products\"];\n    const csvRows = clusters.map(c => [c.cluster_id, c.category || \"Uncategorized\", c.total_customers || 0, formatNumber(c.avg_purchase_frequency, 2), formatNumber(c.avg_age, 1), (c.most_purchased_products || []).join(\"; \")]);\n    const csvContent = [csvHeader, ...csvRows].map(row => row.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"href\", url);\n    a.setAttribute(\"download\", \"kmeans_clusters.csv\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(VisualizationContainer, {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 0.6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Target, {\n        size: 24,\n        color: \"#667eea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"K-Means Customer Segmentation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        onClick: handleDownload,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), \" Download CSV\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(ChartContainer, {\n        children: /*#__PURE__*/_jsxDEV(Scatter, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClusterStats, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: \"16px\",\n            color: \"#374151\"\n          },\n          children: \"Cluster Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), clusters.map((cluster, index) => {\n          var _cluster$most_purchas;\n          return /*#__PURE__*/_jsxDEV(ClusterCard, {\n            color: clusterColors[index % clusterColors.length],\n            children: [/*#__PURE__*/_jsxDEV(ClusterHeader, {\n              children: [/*#__PURE__*/_jsxDEV(Users, {\n                size: 16,\n                color: clusterColors[index % clusterColors.length]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Cluster \", cluster.cluster_id, \" \\u2013\", \" \", cluster.category || \"Uncategorized\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Customers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cluster.total_customers || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Avg Items/User:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: formatNumber(cluster.avg_purchase_frequency, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Avg Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: formatNumber(cluster.avg_age, 1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ClusterMetric, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Top Products:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: ((_cluster$most_purchas = cluster.most_purchased_products) === null || _cluster$most_purchas === void 0 ? void 0 : _cluster$most_purchas.join(\", \")) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CategorySelect, {\n              value: cluster.category || \"\",\n              onChange: e => handleCategoryChange(cluster.cluster_id, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), categoryOptions.map((opt, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: opt,\n                children: opt\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(KMeansVisualization, \"pTbvDTM1ji6ch2y39jBjJXgJgNA=\");\n_c1 = KMeansVisualization;\nexport default KMeansVisualization;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"VisualizationContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"DownloadButton\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"ChartContainer\");\n$RefreshReg$(_c6, \"ClusterStats\");\n$RefreshReg$(_c7, \"ClusterCard\");\n$RefreshReg$(_c8, \"ClusterHeader\");\n$RefreshReg$(_c9, \"ClusterMetric\");\n$RefreshReg$(_c0, \"CategorySelect\");\n$RefreshReg$(_c1, \"KMeansVisualization\");","map":{"version":3,"names":["React","useState","motion","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","styled","Users","Target","Download","jsxDEV","_jsxDEV","register","VisualizationContainer","div","_c","Header","_c2","DownloadButton","button","_c3","Content","_c4","ChartContainer","_c5","ClusterStats","_c6","ClusterCard","props","color","_c7","ClusterHeader","_c8","ClusterMetric","_c9","CategorySelect","select","_c0","KMeansVisualization","data","_s","clusters","setClusters","children","fileName","_jsxFileName","lineNumber","columnNumber","clusterColors","categoryOptions","getAdjustedPosition","point","category","x","y","groupedPoints","visualization_data","reduce","acc","_clusters$find","cluster","clusterCategory","find","c","cluster_id","push","chartData","datasets","Object","keys","map","clusterId","_clusters$clusterNum","clusterNum","parseInt","label","backgroundColor","length","borderColor","pointRadius","pointHoverRadius","_c$centroid","_c$centroid2","centroid","pointStyle","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","font","size","weight","tooltip","callbacks","context","raw","customer_name","age","scales","formatNumber","value","decimals","isNaN","toFixed","handleCategoryChange","newCategory","updatedClusters","labelsPayload","forEach","token","localStorage","getItem","fetch","method","headers","Authorization","body","JSON","stringify","labels","err","console","error","handleDownload","csvHeader","csvRows","total_customers","avg_purchase_frequency","avg_age","most_purchased_products","join","csvContent","row","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","setAttribute","appendChild","click","removeChild","initial","opacity","animate","transition","duration","onClick","options","style","marginBottom","index","_cluster$most_purchas","onChange","e","target","opt","i","_c1","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Market Basket/frontend/src/components/KMeansVisualization.js"],"sourcesContent":["// src/components/KMeansVisualization.js\r\nimport React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Scatter } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport styled from \"styled-components\";\r\nimport { Users, Target, Download } from \"lucide-react\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n/* ------------------- ðŸŽ¨ Styled Components ------------------- */\r\nconst VisualizationContainer = styled(motion.div)`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(20px);\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  margin-bottom: 24px;\r\n\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    color: #374151;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst DownloadButton = styled.button`\r\n  margin-left: auto;\r\n  background: #4f46e5;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 14px;\r\n  border-radius: 8px;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    background: #4338ca;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 24px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst ChartContainer = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  height: 450px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst ClusterStats = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nconst ClusterCard = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 16px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n  border-left: 4px solid ${(props) => props.color};\r\n`;\r\n\r\nconst ClusterHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 8px;\r\n\r\n  h3 {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    color: #374151;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst ClusterMetric = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 4px;\r\n\r\n  span {\r\n    font-size: 0.875rem;\r\n    color: #6b7280;\r\n  }\r\n\r\n  strong {\r\n    color: #374151;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst CategorySelect = styled.select`\r\n  margin-top: 8px;\r\n  padding: 6px 8px;\r\n  border-radius: 6px;\r\n  border: 1px solid #d1d5db;\r\n  font-size: 0.9rem;\r\n  width: 100%;\r\n  background: #f9fafb;\r\n`;\r\n\r\n/* ------------------- ðŸ§  Component ------------------- */\r\nconst KMeansVisualization = ({ data }) => {\r\n  const [clusters, setClusters] = useState(data?.clusters || []);\r\n\r\n  if (!data) return <p>No clustering data available</p>;\r\n\r\n  const clusterColors = [\r\n    \"#3b82f6\",\r\n    \"#10b981\",\r\n    \"#f59e0b\",\r\n    \"#ef4444\",\r\n    \"#8b5cf6\",\r\n    \"#06b6d4\",\r\n    \"#84cc16\",\r\n    \"#f97316\",\r\n  ];\r\n\r\n  const categoryOptions = [\r\n    \"High Value\",\r\n    \"Budget Shoppers\",\r\n    \"Occasional Buyers\",\r\n    \"Frequent Buyers\",\r\n    \"Young Adults\",\r\n    \"Seniors\",\r\n    \"Families\",\r\n    \"Others\",\r\n  ];\r\n\r\n  // ðŸ”‘ Adjust positions based on category selection\r\n  const getAdjustedPosition = (point, category) => {\r\n    switch (category) {\r\n      case \"High Value\":\r\n        return { ...point, x: point.x + 2, y: point.y + 2 };\r\n      case \"Budget Shoppers\":\r\n        return { ...point, x: point.x - 2, y: point.y };\r\n      case \"Occasional Buyers\":\r\n        return { ...point, x: point.x, y: point.y - 2 };\r\n      case \"Frequent Buyers\":\r\n        return { ...point, x: point.x, y: point.y + 2 };\r\n      case \"Young Adults\":\r\n        return { ...point, x: point.x + 3, y: point.y - 1 };\r\n      case \"Seniors\":\r\n        return { ...point, x: point.x - 3, y: point.y + 1 };\r\n      case \"Families\":\r\n        return { ...point, x: point.x + 1, y: point.y - 3 };\r\n      default:\r\n        return point;\r\n    }\r\n  };\r\n\r\n  // âœ… Group points by cluster with adjusted positions\r\n  const groupedPoints = (data.visualization_data || []).reduce((acc, point) => {\r\n    if (!acc[point.cluster]) acc[point.cluster] = [];\r\n    const clusterCategory =\r\n      clusters.find((c) => c.cluster_id === point.cluster)?.category || \"\";\r\n    acc[point.cluster].push(getAdjustedPosition(point, clusterCategory));\r\n    return acc;\r\n  }, {});\r\n\r\n  // âœ… Chart datasets\r\n  const chartData = {\r\n    datasets: [\r\n      ...Object.keys(groupedPoints).map((clusterId) => {\r\n        const clusterNum = parseInt(clusterId, 10);\r\n        return {\r\n          label: clusters[clusterNum]?.category || `Cluster ${clusterNum}`,\r\n          data: groupedPoints[clusterNum],\r\n          backgroundColor: clusterColors[clusterNum % clusterColors.length],\r\n          borderColor: clusterColors[clusterNum % clusterColors.length],\r\n          pointRadius: 5,\r\n          pointHoverRadius: 7,\r\n        };\r\n      }),\r\n      {\r\n        label: \"Centroids\",\r\n        data: clusters.map((c) => ({\r\n          x: c.centroid?.[0] || 0,\r\n          y: c.centroid?.[1] || 0,\r\n        })),\r\n        backgroundColor: \"#111827\",\r\n        pointStyle: \"star\",\r\n        pointRadius: 10,\r\n        pointHoverRadius: 12,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { position: \"top\" },\r\n      title: {\r\n        display: true,\r\n        text: \"Customer Segmentation - K-Means Clustering\",\r\n        font: { size: 16, weight: \"bold\" },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            const point = context.raw;\r\n            if (point.customer_name) {\r\n              return `${point.customer_name} (Age: ${point.age || \"N/A\"})`;\r\n            }\r\n            return \"Centroid\";\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: { title: { display: true, text: \"Principal Component 1\" } },\r\n      y: { title: { display: true, text: \"Principal Component 2\" } },\r\n    },\r\n  };\r\n\r\n  // âœ… Safe number formatter\r\n  const formatNumber = (value, decimals = 2) =>\r\n    typeof value === \"number\" && !isNaN(value)\r\n      ? value.toFixed(decimals)\r\n      : \"N/A\";\r\n\r\n  // âœ… Handle category change\r\n  const handleCategoryChange = async (clusterId, newCategory) => {\r\n    const updatedClusters = clusters.map((c) =>\r\n      c.cluster_id === clusterId ? { ...c, category: newCategory } : c\r\n    );\r\n    setClusters(updatedClusters);\r\n\r\n    const labelsPayload = {};\r\n    updatedClusters.forEach((c) => {\r\n      labelsPayload[c.cluster_id] = c.category;\r\n    });\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await fetch(\"http://127.0.0.1:5000/api/set-cluster-labels\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token ? `Bearer ${token}` : \"\",\r\n        },\r\n        body: JSON.stringify({ labels: labelsPayload }),\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error saving cluster labels:\", err);\r\n    }\r\n  };\r\n\r\n  // âœ… Download as CSV\r\n  const handleDownload = () => {\r\n    const csvHeader = [\r\n      \"Cluster ID\",\r\n      \"Category\",\r\n      \"Total Customers\",\r\n      \"Avg Purchase Frequency\",\r\n      \"Avg Age\",\r\n      \"Top Products\",\r\n    ];\r\n    const csvRows = clusters.map((c) => [\r\n      c.cluster_id,\r\n      c.category || \"Uncategorized\",\r\n      c.total_customers || 0,\r\n      formatNumber(c.avg_purchase_frequency, 2),\r\n      formatNumber(c.avg_age, 1),\r\n      (c.most_purchased_products || []).join(\"; \"),\r\n    ]);\r\n\r\n    const csvContent =\r\n      [csvHeader, ...csvRows].map((row) => row.join(\",\")).join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.setAttribute(\"href\", url);\r\n    a.setAttribute(\"download\", \"kmeans_clusters.csv\");\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  return (\r\n    <VisualizationContainer\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n    >\r\n      <Header>\r\n        <Target size={24} color=\"#667eea\" />\r\n        <h2>K-Means Customer Segmentation</h2>\r\n        <DownloadButton onClick={handleDownload}>\r\n          <Download size={16} /> Download CSV\r\n        </DownloadButton>\r\n      </Header>\r\n\r\n      <Content>\r\n        {/* Chart */}\r\n        <ChartContainer>\r\n          <Scatter data={chartData} options={chartOptions} />\r\n        </ChartContainer>\r\n\r\n        {/* Cluster Stats */}\r\n        <ClusterStats>\r\n          <h3 style={{ marginBottom: \"16px\", color: \"#374151\" }}>\r\n            Cluster Statistics\r\n          </h3>\r\n          {clusters.map((cluster, index) => (\r\n            <ClusterCard\r\n              key={index}\r\n              color={clusterColors[index % clusterColors.length]}\r\n            >\r\n              <ClusterHeader>\r\n                <Users\r\n                  size={16}\r\n                  color={clusterColors[index % clusterColors.length]}\r\n                />\r\n                <h3>\r\n                  Cluster {cluster.cluster_id} â€“{\" \"}\r\n                  {cluster.category || \"Uncategorized\"}\r\n                </h3>\r\n              </ClusterHeader>\r\n\r\n              <ClusterMetric>\r\n                <span>Customers:</span>\r\n                <strong>{cluster.total_customers || 0}</strong>\r\n              </ClusterMetric>\r\n              <ClusterMetric>\r\n                <span>Avg Items/User:</span>\r\n                <strong>{formatNumber(cluster.avg_purchase_frequency, 2)}</strong>\r\n              </ClusterMetric>\r\n              <ClusterMetric>\r\n                <span>Avg Age:</span>\r\n                <strong>{formatNumber(cluster.avg_age, 1)}</strong>\r\n              </ClusterMetric>\r\n              <ClusterMetric>\r\n                <span>Top Products:</span>\r\n                <strong>\r\n                  {cluster.most_purchased_products?.join(\", \") || \"N/A\"}\r\n                </strong>\r\n              </ClusterMetric>\r\n\r\n              {/* Dropdown to change category */}\r\n              <CategorySelect\r\n                value={cluster.category || \"\"}\r\n                onChange={(e) =>\r\n                  handleCategoryChange(cluster.cluster_id, e.target.value)\r\n                }\r\n              >\r\n                <option value=\"\">Select Category</option>\r\n                {categoryOptions.map((opt, i) => (\r\n                  <option key={i} value={opt}>\r\n                    {opt}\r\n                  </option>\r\n                ))}\r\n              </CategorySelect>\r\n            </ClusterCard>\r\n          ))}\r\n        </ClusterStats>\r\n      </Content>\r\n    </VisualizationContainer>\r\n  );\r\n};\r\n\r\nexport default KMeansVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}